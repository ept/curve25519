// Computes the figure that illustrates how repeated application of the group operator generates
// a sequence of curve points that "jumps around".
const steps = 6, a = -1.9, xmin = -0.1, xmax = 3.0, ymax = Math.sqrt(xmax*xmax*xmax + a*xmax*xmax + xmax)

while (true) {
  const xp = 2.0*Math.random()
  const yp = Math.sqrt(xp*xp*xp + a*xp*xp + xp)
  const m = (3*xp*xp + 2*a*xp + 1) / (2*yp)
  let xq = m*m - a - 2*xp
  let yq = - (yp + m * (xq - xp))
  let line1 = yp - m * (xp - xmin)
  let line2 = line1 + m * (xmax - xmin)
  let points = [{x: xp, y: yp}, {x: xq, y: yq, line1, line2}]

  for (let i = 0; i < steps - 1; i++) {
    const m = (yq - yp) / (xq - xp)
    xq = m*m - a - xp - xq
    yq = - (yp + m * (xq - xp))
    line1 = yp - m * (xp - xmin)
    line2 = line1 + m * (xmax - xmin)
    points.push({x: xq, y: yq, line1, line2})
  }

  if (points.every(p => p.x < 3)) {
    console.log(`% This file is generated by jumping.js`)
    console.log(`\\begin{tikzpicture}[scale=1.2]`)
    for (let i = 1; i < points.length; i++) {
      const xoff = 4 * ((i - 1) % 3)
      const yoff = 2.1 * ymax * Math.floor((steps - i) / 3)
      console.log(`\\draw [->] (${xmin + xoff},${yoff}) -- (${xmax + 0.1 + xoff},${yoff});`)
      console.log(`\\draw [->] (${xoff},${-ymax + yoff}) -- (${xoff},${ymax + yoff});`)
      console.log(`\\draw [color=blue] plot[id=pos3,domain=0:3,samples=100,xshift=${xoff} cm,yshift=${yoff} cm] function{ sqrt(x**3 + ${a}*x**2 + x)};`)
      console.log(`\\draw [color=blue] plot[id=neg3,domain=0:3,samples=100,xshift=${xoff} cm,yshift=${yoff} cm] function{-sqrt(x**3 + ${a}*x**2 + x)};`)
      console.log(`\\draw [color=red] (${points[0].x + xoff},${points[0].y + yoff}) circle [radius=2pt] node[above,outer sep=5pt] {$P$};`)
      if (i > 1) console.log(`\\draw [color=red] (${points[i - 1].x + xoff},${points[i - 1].y + yoff}) circle [radius=2pt] node[${points[i - 1].y > 0 ? 'above' : 'below'},outer sep=5pt] {$P^{${i}}$};`)
      console.log(`\\draw [color=red,densely dashed] (${points[i].x + xoff},${-points[i].y + yoff}) -- (${points[i].x + xoff},${points[i].y + yoff});`)
      console.log(`\\draw [color=red] (${points[i].x + xoff},${points[i].y + yoff}) circle [radius=2pt] node[${points[i].y > 0 ? 'above' : 'below'},outer sep=5pt] {$${i == 1 ? 'P \\bullet P' : `P^{${i+1}}`}$};`)
      console.log(`\\draw [color=red] (${xmin + xoff},${points[i].line1 + yoff}) -- (${xmax + xoff},${points[i].line2 + yoff});`)
    }
    console.log(`\\end{tikzpicture}`)
    break
  }
}
